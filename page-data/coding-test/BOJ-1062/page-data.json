{"componentChunkName":"component---src-templates-blog-post-js","path":"/coding-test/BOJ-1062/","result":{"data":{"site":{"siteMetadata":{"title":"dding-glog"}},"markdownRemark":{"id":"8ae64204-ae0f-5e87-b9af-09a10862f12d","excerpt":"answer","html":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const fs = require(\"fs\")\nconst [input, ...arr] = fs.readFileSync(\"./test\").toString().trim().split(\"\\n\")\n\nconst prefix = [\"a\", \"n\", \"t\", \"i\", \"c\"]\nconst [n, k] = input.split(\" \")\n\n// antic 이 5글자 이므로 최소 5글자 이상 배울 수 있어야 하나의 단어를 읽을 수 있음\nif (k &lt;= prefix.length) {\n  console.log(0)\n  return\n}\n\n// 배움이 필요한 단어들\nconst words = new Set(prefix)\n\n// 중복처리\narr.forEach(v => {\n  if (!words.has(v)) {\n    new Set(v).forEach(sv => words.add(sv))\n  }\n})\n\n// 모두 배울 수 있으면 전체 단어 개수 return\nif (words.length + prefix.length &lt;= k) {\n  console.log(arr.length)\n  return\n}\n\nlet count = []\nconst countReadableWords = p =>\n  arr.reduce((prev, curr) => {\n    if (Array.from(new Set(prev)).every(v => words.has(v))) {\n      curr += 1\n    }\n\n    return curr\n  }, 0)\n\nconst arrWords = Array.from(words)\n\nconst dfs = (learned, idx) => {\n  if (learned.length === k - prefix.length) {\n    count.push(countReadableWords(learned))\n    dfs(learned.slice(0, learned.length - 1), idx - 1)\n    return\n  }\n\n  dfs(learned + arrWords[idx], idx + 1)\n}</code></pre></div>\n<p>answer</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const fs = require(\"fs\")\nconst input = fs.readFileSync(\"/dev/stdin\").toString().trim().split(\"\\n\")\n\n;(function solution(input) {\n  const [n, k] = input[0].split(\" \").map(Number)\n\n  if (k &lt; 5) {\n    console.log(0)\n    return\n  } else if (k === 26) {\n    console.log(n)\n    return\n  }\n\n  const words = input.slice(1).map(word => {\n    let check = 0\n    for (let i = 0; i &lt; word.length; i++) {\n      check |= 1 &lt;&lt; (word.charCodeAt(i) - 97)\n    }\n    return check\n  })\n\n  let learned = 0\n  const required = \"antatica\"\n  for (let i = 0; i &lt; required.length; i++) {\n    learned |= 1 &lt;&lt; (required.charCodeAt(i) - 97)\n  }\n  const learnings = k - 5\n  let maxLearnedWords = 0\n\n  dfs(0, 0)\n\n  console.log(maxLearnedWords)\n\n  function dfs(cnt, start) {\n    if (cnt >= learnings) {\n      let learnedWords = 0\n      words.forEach(word => {\n        if ((word &amp; learned) === word) learnedWords++\n      })\n      maxLearnedWords = Math.max(maxLearnedWords, learnedWords)\n      return\n    }\n\n    for (let i = start; i &lt; 26; i++) {\n      if (!(learned &amp; (1 &lt;&lt; i))) {\n        learned |= 1 &lt;&lt; i\n        dfs(cnt + 1, i + 1)\n        learned ^= 1 &lt;&lt; i\n      }\n    }\n  }\n})(input)</code></pre></div>","frontmatter":{"title":"BOJ-1062","date":null,"description":"가르침 (https://www.acmicpc.net/problem/1062)","tags":["코딩테스트","백준"]}},"previous":{"fields":{"slug":"/coding-test/BOJ-10828/"},"frontmatter":{"title":"BOJ-10828"}},"next":null},"pageContext":{"id":"8ae64204-ae0f-5e87-b9af-09a10862f12d","previousPostId":"b09b580b-1224-5808-a0e3-ec8f3641dad0","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"]}