{"componentChunkName":"component---src-templates-blog-post-js","path":"/coding-test/BOJ-2504/","result":{"data":{"site":{"siteMetadata":{"title":"dding-glog"}},"markdownRemark":{"id":"84b2c2fc-5fdb-53da-ac2d-d42245e87527","excerpt":"","html":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const fs = require(\"fs\")\nconst bracket = fs.readFileSync(\"./test\").toString().trim().split(\"\")\n\nconst startPrefix = [\"(\", \"[\"]\nconst endPrefix = [\")\", \"]\"]\n\nconst stack = []\n\nlet ret = 0\n\nconst compare = (a, b) => {\n  if ((a === \"(\" &amp;&amp; b === \")\") || (a === \"[\" &amp;&amp; b === \"]\")) return true\n\n  return false\n}\n\nconst calc = (val) => {\n  if(stack[stack.length-1])\n  const last = stack.pop();\n    const isNormal = compare(s, last);\n\n}\n\nfor(let i =0  ;i &lt; bracket.length ; i++){\n  if(endPrefix.includes(bracket[i])){\n    let isEndPrefix = true;\n\n    while(isEndPrefix){\n      const last = stack.pop();\n      const isNormal = compare(bracket[i], last);\n\n      if(!isNormal) {\n        console.log(0);\n        return;\n      };\n\n    }\n    \n  }\n\n  stack.push(s);\n}\n</code></pre></div>","frontmatter":{"title":"BOJ-2504","date":null,"description":"괄호의 값","tags":["코딩테스트","백준"]}},"previous":{"fields":{"slug":"/coding-test/BOJ-2581/"},"frontmatter":{"title":"BOJ-2581"}},"next":{"fields":{"slug":"/coding-test/BOJ-2309/"},"frontmatter":{"title":"BOJ-2309"}}},"pageContext":{"id":"84b2c2fc-5fdb-53da-ac2d-d42245e87527","previousPostId":"450daf0e-d161-592d-94de-de23f5c8e07e","nextPostId":"5a82571e-787d-5fc7-bfc8-dfc14ae3867e"}},"staticQueryHashes":["2841359383","3257411868"]}