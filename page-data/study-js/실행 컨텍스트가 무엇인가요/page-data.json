{"componentChunkName":"component---src-templates-blog-post-js","path":"/study-js/실행 컨텍스트가 무엇인가요/","result":{"data":{"site":{"siteMetadata":{"title":"dding-glog"}},"markdownRemark":{"id":"c81dd4a1-69a1-5016-b1c5-cfaa719bad12","excerpt":"정의 실행 컨텍스트(execution context)는 Javascript…","html":"<h2>정의</h2>\n<p>실행 컨텍스트(execution context)는 Javascript 동작 원리를 담고 있는 핵심 개념이다.\n소스코드는 두가지 단계를 거쳐 실행된다.</p>\n<ol>\n<li>소스코드 평가\n<ul>\n<li>실행 컨텍스트를 생성하고 변수, 함수 등 호이스팅 된 결과를 실행 컨텍스트가 관리하는 스코프(렉시컬 환경의 환경 레코드)에 등록한다.</li>\n</ul>\n</li>\n<li>소스코드 실행\n<ul>\n<li>런타임 환경에서 소스코드가 실행되면서 소스코드 실행에 필요한 변수, 함수의 참조를 실행 컨텍스트가 관리하는 스코프에서 가져오고 변수 값의 변경 등 소스코드 실행 결과는 다시 실행 컨텍스트가 관리하는 스코프에 등록된다.</li>\n</ul>\n</li>\n</ol>\n<p>각 과정이 진행되면서 필요한 스코프, 식별자, 코드 실행 순서 등 소스코드를 실행하는데 필요한 전반적인 과정들을 등록하고 관리하는 영역을 <code class=\"language-text\">실행 컨텍스트</code> 라고 하며 <code class=\"language-text\">스택(Stack)</code> 자료구조로 관리된다.</p>","frontmatter":{"title":"실행 컨텍스트가 무엇인가요?","date":"July 31, 2022","description":"실행 컨텍스트가 무엇인가요","tags":["Javascript"]}},"previous":{"fields":{"slug":"/study-js/프로토타입(prototype)이 무엇인가요/"},"frontmatter":{"title":"프로토타입(prototype)이 무엇인가요?"}},"next":{"fields":{"slug":"/study-js/babel이 무엇인가요/"},"frontmatter":{"title":"babel이 무엇인가요?"}}},"pageContext":{"id":"c81dd4a1-69a1-5016-b1c5-cfaa719bad12","previousPostId":"ee831999-9a70-5975-ae53-e18efdded058","nextPostId":"fa5e4f4a-42f9-5349-9e4d-0bd6728801a2"}},"staticQueryHashes":["2841359383","3257411868"]}